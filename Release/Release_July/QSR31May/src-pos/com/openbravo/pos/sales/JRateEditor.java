//    Openbravo POS is a point of sales application designed for touch screens.
//    Copyright (C) 2007-2009 Openbravo, S.L.
//    http://www.openbravo.com/product/pos
//
//    This file is part of Openbravo POS.
//
//    Openbravo POS is free software: you can redistribute it and/or modify
//    it under the terms of the GNU General Public License as published by
//    the Free Software Foundation, either version 3 of the License, or
//    (at your option) any later version.
//
//    Openbravo POS is distributed in the hope that it will be useful,
//    but WITHOUT ANY WARRANTY; without even the implied warranty of
//    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//    GNU General Public License for more details.
//
//    You should have received a copy of the GNU General Public License
//    along with Openbravo POS.  If not, see <http://www.gnu.org/licenses/>.
package com.openbravo.pos.sales;

import com.openbravo.basic.BasicException;
import java.awt.Component;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.*;
import com.openbravo.pos.forms.AppView;
import com.openbravo.pos.customers.DataLogicCustomers;
import com.openbravo.pos.forms.AppConfig;
import com.openbravo.pos.sales.shared.JTicketsBagShared;
import com.openbravo.pos.ticket.RetailTicketInfo;
import com.openbravo.pos.ticket.TicketInfo;
import com.openbravo.pos.sales.DiscountReasonInfo;
import java.awt.Dialog;
import java.awt.Frame;
import java.awt.Window;
import java.awt.event.KeyEvent;
import java.io.File;
import java.util.Properties;

public class JRateEditor extends JDialog {

    public javax.swing.JDialog dEdior = null;
    private Properties dbp = new Properties();
    private DataLogicReceipts dlReceipts = null;
    private DataLogicCustomers dlCustomers = null;
    private AppView m_app;
    public String[] strings = {""};
    public DefaultListModel model = null;
    public java.util.List<DiscountRateinfo> list = null;
    public boolean updateMode = false;
    static Component parentLocal = null;
    static RetailTicketInfo tinfoLocal = null;
    public static String userRole = null;
    private static DataLogicReceipts localDlReceipts = null;
    public JRetailPanelTicket JRetailPanelTicket;
    private boolean enablity;
    int x = 500;
    int y = 300;
    int width = 350;
    int height = 280;
    public static String tinfotype;
    private java.util.List<DiscountReasonInfo> drList = null;

    public static void showMessage(Component parent, DataLogicReceipts dlReceipts, RetailTicketInfo tinfo, String role, String type) {
        localDlReceipts = dlReceipts;
        parentLocal = parent;
        tinfoLocal = tinfo;
        userRole = role;
        tinfotype = type;
        showMessage(parent, dlReceipts, 1);
    }

    private static void showMessage(Component parent, DataLogicReceipts dlReceipts, int x) {

        Window window = getWindow(parent);
        JRateEditor myMsg;
        if (window instanceof Frame) {
            myMsg = new JRateEditor((Frame) window, true);
        } else {
            myMsg = new JRateEditor((Dialog) window, true);
        }
        myMsg.init(dlReceipts);
    }

    private JRateEditor(Frame frame, boolean b) {
        super(frame, true);
        setBounds(x, y, width, height);

    }

    private JRateEditor(Dialog dialog, boolean b) {
        super(dialog, true);
        setBounds(x, y, width, height);

    }

    public void init(DataLogicReceipts dlReceipts) {

        initComponents();

//        if (userRole.equalsIgnoreCase("admin")) {
//            m_jDiscountratetxt.setVisible(true);
//            setEnablity(true);
//
//        }
        try {
            java.util.List<DiscountRateinfo> list = dlReceipts.getDiscountList();
            for (DiscountRateinfo dis : list) {
                m_jDiscountPercentage.addItem(dis.getName());
            }
            m_jDiscountPercentage.setSelectedIndex(-1);
        } catch (BasicException ex) {
            Logger.getLogger(JRateEditor.class.getName()).log(Level.SEVERE, null, ex);
        }
  try {
            java.util.List<DiscountReasonInfo> list = dlReceipts.getDiscountReason();
            drList = list;
            for (DiscountReasonInfo dis : list) {
                m_jReason.addItem(dis.getReason());
            }
            m_jReason.setSelectedIndex(-1);
        } catch (BasicException ex) {
            Logger.getLogger(JRateEditor.class.getName()).log(Level.SEVERE, null, ex);
        }
  
        setTitle("Discounts Editor");
        setVisible(true);
        File file = new File(System.getProperty("user.home") + "/openbravopos.properties");
        AppConfig ap = new AppConfig(file);
        ap.load();

    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        m_jDiscountLabel1 = new javax.swing.JLabel();
        m_jDiscountPercentage = new javax.swing.JComboBox();
        m_jdiscountOk = new javax.swing.JButton();
        m_jDiscountratetxt = new javax.swing.JTextField();
        m_jDiscountratelbl = new javax.swing.JLabel();
        m_jdiscountCancel = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        m_jReason = new javax.swing.JComboBox();

        m_jDiscountLabel1.setText("Rate");
        m_jDiscountLabel1.setPreferredSize(null);

        m_jDiscountPercentage.setModel(new javax.swing.DefaultComboBoxModel(new String[] {}));
        m_jDiscountPercentage.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(javax.swing.UIManager.getDefaults().getColor("Button.darkShadow")), null), null));
        m_jDiscountPercentage.setPreferredSize(null);
        m_jDiscountPercentage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                m_jDiscountPercentageActionPerformed(evt);
            }
        });

        m_jdiscountOk.setBackground(new java.awt.Color(255, 255, 255));
        m_jdiscountOk.setMnemonic(KeyEvent.VK_ENTER);
        m_jdiscountOk.setText("Ok");
        m_jdiscountOk.setMaximumSize(new java.awt.Dimension(83, 25));
        m_jdiscountOk.setMinimumSize(new java.awt.Dimension(83, 25));
        m_jdiscountOk.setPreferredSize(new java.awt.Dimension(83, 25));
        m_jdiscountOk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                m_jdiscountOkActionPerformed(evt);
            }
        });
        m_jdiscountOk.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                m_jdiscountOkKeyPressed(evt);
            }
        });

        m_jDiscountratetxt.setVisible(false);
        m_jDiscountratetxt.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(javax.swing.UIManager.getDefaults().getColor("Button.darkShadow")), null));
        m_jDiscountratetxt.setMinimumSize(new java.awt.Dimension(23, 18));
        m_jDiscountratetxt.setPreferredSize(null);
        m_jDiscountratetxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                m_jDiscountratetxtKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                m_jDiscountratetxtKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                m_jDiscountratetxtKeyTyped(evt);
            }
        });

        m_jDiscountratelbl.setText("Amount"); // NOI18N
        m_jDiscountratelbl.setPreferredSize(null);
        m_jDiscountratelbl.setVisible(false);

        m_jdiscountCancel.setBackground(new java.awt.Color(255, 255, 255));
        m_jdiscountCancel.setMnemonic(KeyEvent.VK_ENTER);
        m_jdiscountCancel.setText("Cancel");
        m_jdiscountCancel.setMaximumSize(new java.awt.Dimension(83, 25));
        m_jdiscountCancel.setMinimumSize(new java.awt.Dimension(83, 25));
        m_jdiscountCancel.setPreferredSize(new java.awt.Dimension(83, 25));
        m_jdiscountCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                m_jdiscountCancelActionPerformed(evt);
            }
        });
        m_jdiscountCancel.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                m_jdiscountCancelKeyPressed(evt);
            }
        });

        jLabel1.setText("Reason");

        m_jReason.setModel(new javax.swing.DefaultComboBoxModel(new String[] {}));
        m_jReason.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(javax.swing.UIManager.getDefaults().getColor("Button.darkShadow")), null), null));
        m_jReason.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                m_jReasonActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(71, 71, 71)
                .add(m_jdiscountOk, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(m_jdiscountCancel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .add(layout.createSequentialGroup()
                .add(37, 37, 37)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, layout.createSequentialGroup()
                        .add(jLabel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 53, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(45, 45, 45)
                        .add(m_jReason, 0, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .add(org.jdesktop.layout.GroupLayout.LEADING, layout.createSequentialGroup()
                        .add(m_jDiscountratelbl, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 72, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(26, 26, 26)
                        .add(m_jDiscountratetxt, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .add(org.jdesktop.layout.GroupLayout.LEADING, layout.createSequentialGroup()
                        .add(m_jDiscountLabel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 80, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(18, 18, 18)
                        .add(m_jDiscountPercentage, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 150, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .add(68, 68, 68))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(34, 34, 34)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(m_jDiscountLabel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 25, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(m_jDiscountPercentage, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 25, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(m_jDiscountratelbl, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 25, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(m_jDiscountratetxt, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 25, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(26, 26, 26)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel1)
                    .add(m_jReason, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(36, 36, 36)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(m_jdiscountOk, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(m_jdiscountCancel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(32, Short.MAX_VALUE))
        );

        getAccessibleContext().setAccessibleParent(this);
    }// </editor-fold>//GEN-END:initComponents

    private void m_jdiscountOkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_m_jdiscountOkActionPerformed
            calculateDiscount();

}//GEN-LAST:event_m_jdiscountOkActionPerformed

//    private void calculateDiscount(){
//        System.out.println("calculateDiscount");
//          int discountIndex = m_jDiscountPercentage.getSelectedIndex();
//        String dRate = m_jDiscountratetxt.getText().toString();
//        if (discountIndex <= 0 && dRate.equals("")) {
//            if (isEnablity()) {
//                JOptionPane.showMessageDialog(null, "Select either popup or enter amount ");
//            } else {
//                JOptionPane.showMessageDialog(null, "Select Discount");
//            }
//        } else {
//            try {
//
//               // tinfoLocal.setdName(localDlReceipts.getDiscountLine(m_jDiscountPercentage.getSelectedItem().toString()));
//                tinfoLocal.setRate(localDlReceipts.getDiscountLine(m_jDiscountPercentage.getSelectedItem().toString()));
//            } catch (NullPointerException np) {
//                tinfoLocal.setdName(null);
//            } catch (BasicException ex) {
//                Logger.getLogger(JRateEditor.class.getName()).log(Level.SEVERE, null, ex);
//            }
//            if (discountIndex > 0) {
//                RetailTicketInfo.setUserate(false);
//                JTicketsBagShared.setUserate(false);
//                String discountItem = m_jDiscountPercentage.getSelectedItem().toString();
//                String rateSelected = null;
//                try {
//                    rateSelected = localDlReceipts.getDiscountLine(discountItem);
//                } catch (BasicException ex) {
//                    Logger.getLogger(JRateEditor.class.getName()).log(Level.SEVERE, null, ex);
//                }
//                tinfoLocal.setCustomerDiscount(rateSelected);
//                if(tinfotype.equals("home")){
//                  tinfoLocal.refreshHomeTxtFields(1);
//                }else if(tinfotype.equals("Editsales")) {
//                  tinfoLocal.refreshEditTxtFields(1);
//
//                }else{
//                  tinfoLocal.refreshTxtFields(1);
//                }
//                this.dispose();
//              //  bookingSales = (JPanelBookingSales) app.getBean("com.openbravo.pos.sales.JPanelBookingSales");
//
//            } else {
//
//                RetailTicketInfo.setUserate(true);
//                JTicketsBagShared.setUserate(true);
//                if (dRate == null || dRate.equals("")) {
//                    if ("0".equals(userRole)) {
//                        JOptionPane.showMessageDialog(null, "You should select Percent or Enter Rate");
//                    } else {
//                        JOptionPane.showMessageDialog(null, "Please select Percent ");
//                    }
//                } else {
//
//                    tinfoLocal.setRate(dRate);
//
//                     if(tinfotype.equals("sales")){
//                          tinfoLocal.refreshTxtFields(2);
//                    }else{
//                         tinfoLocal.refreshHomeTxtFields(2);
//                }this.dispose();
//
//                }
//            }
//        }
//
//    }

        private void calculateDiscount(){
        
          int discountIndex = m_jDiscountPercentage.getSelectedIndex();
        String dRate = m_jDiscountratetxt.getText().toString();
        int dReasonIndex = m_jReason.getSelectedIndex();
        if (discountIndex < 0 || dReasonIndex < 0) {
            if (discountIndex < 0) {
                JOptionPane.showMessageDialog(null, "Select Discount ");
            } else {
                JOptionPane.showMessageDialog(null, "Please select the discount reason");
            }
        } else {
            try {

               // tinfoLocal.setdName(localDlReceipts.getDiscountLine(m_jDiscountPercentage.getSelectedItem().toString()));
                tinfoLocal.setRate(localDlReceipts.getDiscountLine(m_jDiscountPercentage.getSelectedItem().toString()));
                tinfoLocal.setDiscountReasonId(drList.get(dReasonIndex).getId());
            } catch (NullPointerException np) {
                tinfoLocal.setdName(null);
            } catch (BasicException ex) {
                Logger.getLogger(JRateEditor.class.getName()).log(Level.SEVERE, null, ex);
            }
            if (discountIndex > -1) {
                RetailTicketInfo.setUserate(false);
                JTicketsBagShared.setUserate(false);
                String discountItem = m_jDiscountPercentage.getSelectedItem().toString();
                String rateSelected = null;
                try {
                    rateSelected = localDlReceipts.getDiscountLine(discountItem);
                } catch (BasicException ex) {
                    Logger.getLogger(JRateEditor.class.getName()).log(Level.SEVERE, null, ex);
                }
                tinfoLocal.setCustomerDiscount(rateSelected);
                
                tinfoLocal.refreshTxtTakeAwayFields(1);
               
                this.dispose();
              //  bookingSales = (JPanelBookingSales) app.getBean("com.openbravo.pos.sales.JPanelBookingSales");

            } else {

                RetailTicketInfo.setUserate(true);
                JTicketsBagShared.setUserate(true);
                if (dRate == null || dRate.equals("")) {
                    if ("0".equals(userRole)) {
                        JOptionPane.showMessageDialog(null, "You should select Percent or Enter Rate");
                    } else {
                        JOptionPane.showMessageDialog(null, "Please select Percent ");
                    }
                } else {

                    tinfoLocal.setRate(dRate);
                  //  tinfoLocal.setdAmt(Double.parseDouble(dRate));
                    tinfoLocal.refreshTxtFields(2);
                    this.dispose();

                }
            }
        }

    }
    private void m_jdiscountCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_m_jdiscountCancelActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_m_jdiscountCancelActionPerformed

    private void m_jDiscountPercentageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_m_jDiscountPercentageActionPerformed
        // TODO add your handling code here:
        int index = m_jDiscountPercentage.getSelectedIndex();
        if (index == -1 || index == 0) {
            m_jDiscountratetxt.setEnabled(true);
        } else {
            m_jDiscountratetxt.setEnabled(false);
        }
    }//GEN-LAST:event_m_jDiscountPercentageActionPerformed

    private void m_jdiscountOkKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_m_jdiscountOkKeyPressed
         calculateDiscount();// TODO add your handling code here:
    }//GEN-LAST:event_m_jdiscountOkKeyPressed

    private void m_jdiscountCancelKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_m_jdiscountCancelKeyPressed
        this.dispose();// TODO add your handling code here:
    }//GEN-LAST:event_m_jdiscountCancelKeyPressed

    private void m_jReasonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_m_jReasonActionPerformed
        // TODO add your handling code here:
}//GEN-LAST:event_m_jReasonActionPerformed

    private void m_jDiscountratetxtKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_m_jDiscountratetxtKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_m_jDiscountratetxtKeyTyped

    private void m_jDiscountratetxtKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_m_jDiscountratetxtKeyReleased
        // TODO add your handling code here:
        String text = m_jDiscountratetxt.getText();
        if (!"".equals(text)) {
            m_jDiscountPercentage.setEnabled(false);
        } else {
            m_jDiscountPercentage.setEnabled(true);
        }
    }//GEN-LAST:event_m_jDiscountratetxtKeyReleased

    private void m_jDiscountratetxtKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_m_jDiscountratetxtKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_m_jDiscountratetxtKeyPressed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel m_jDiscountLabel1;
    private javax.swing.JComboBox m_jDiscountPercentage;
    private javax.swing.JLabel m_jDiscountratelbl;
    private javax.swing.JTextField m_jDiscountratetxt;
    private javax.swing.JComboBox m_jReason;
    private javax.swing.JButton m_jdiscountCancel;
    private javax.swing.JButton m_jdiscountOk;
    // End of variables declaration//GEN-END:variables

    public void populateList(DataLogicCustomers dlCustomers) throws BasicException {

        list = dlCustomers.getDiscountList();
        String[] dListId = null;
        String[] dListRate = null;
        for (int i = 0; i < list.size(); i++) {
            System.out.println("getPercentage " + list.get(i).getName());
            String listid = list.get(i).getName();
            model.add(i, listid);
            //dListRate[i] = list.get(i).getRate();
        }
    }

    private static Window getWindow(Component parent) {
        if (parent == null) {
            return new JFrame();
        } else if (parent instanceof Frame || parent instanceof Dialog) {
            return (Window) parent;
        } else {
            return getWindow(parent.getParent());
        }
    }

    /**
     * @return the enablity
     */
    public boolean isEnablity() {
        return enablity;
    }

    /**
     * @param enablity the enablity to set
     */
    public void setEnablity(boolean enablity) {
        this.enablity = enablity;
    }
}